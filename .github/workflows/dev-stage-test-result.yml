# SPDX-FileCopyrightText: © 2025 Kyurenpoto <heal9179@gmail.com>
#
# SPDX-License-Identifier: MIT

---
name: dev/stage test result

on:
  workflow_run:
    workflows: ["ci"]
    types:
      - completed

permissions:
  contents: write
  issues: write

jobs:
  set-condition:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.calc_condition.outputs.should_run }}
    steps:
      - name: calculate condition
        id: calc_condition
        run: |
          EVENT="${{ github.event.workflow_run.event}}"
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          if [[ "$EVENT" == "push" ]] && [[ "$BRANCH" == "dev" || "$BRANCH" == release/* || "$BRANCH" == non-release/* ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  parse-issue-ids:
    runs-on: ubuntu-latest
    needs: set-condition
    if: ${{ needs.set-condition.outputs.should_run == 'true' }}
    outputs:
      issue_numbers: ${{ steps.extract_issues.outputs.issue_numbers }}
      message: ${{ steps.set_message.outputs.message }}
    steps:
      - name: target environment
        run: |
          if [ "${{ github.event.workflow_run.head_branch }}" == "dev" ]; then
            echo "env=dev" >> $GITHUB_ENV
          else
            echo "env=staging" >> $GITHUB_ENV
          fi

      - name: set comment message
        id: set_message
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
            echo "message=✅ ${{ env.env }} test completed successfully!" >> $GITHUB_OUTPUT
          else
            echo "message=❌ ${{ env.env }} test failed. Please check the details at: https://github.com/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          fi

      - name: extract issue numbers from commit message
        id: extract_issues
        run: |
          ISSUE_NUMBERS=$(printf '%s' "${{ github.event.workflow_run.head_commit.message }}" | tail -n +2 | grep -o '#[0-9]\+' | tr -d '#' | sort -u)
          JSON_ARRAY=$(echo "$ISSUE_NUMBERS" | jq -R . | jq -sc .)
          echo "issue_numbers=$JSON_ARRAY" >> $GITHUB_OUTPUT

  post-comments:
    runs-on: ubuntu-latest
    needs: parse-issue-ids
    strategy:
      matrix:
        issue: ${{ fromJson(needs.parse-issue-ids.outputs.issue_numbers) }}
    steps:
      - name: post comments
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ matrix.issue }}
          body: ${{ needs.parse-issue-ids.outputs.message }}
